name: Build and Push Dataherald Streamlit

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'services/streamlit/**'
      - '.github/workflows/build-and-push-streamlit.yaml'

permissions:
  contents: read
  packages: write

concurrency:
  group: dataherald-streamlit-workflow
  cancel-in-progress: true

jobs:
  generate-short-sha:
    name: Generate Short SHA
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ env.SHORT_SHA }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Generate short sha
        uses: ./.github/actions/generate-short-sha

  build-dataherald-frontend:
    name: Build Dataherald Frontend
    needs: [generate-short-sha]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: 'ghcr.io/kapitolph/dataherald'
      SERVICE_ACCOUNT_USERNAME: ${{ vars.SERVICE_ACCOUNT_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      SHORT_SHA: ${{ needs.generate-short-sha.outputs.short_sha }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Build dataherald frontend
        uses: ./.github/actions/docker-build
        with:
          depot_project_id: ${{ vars.DEPOT_PROJECT_ID }}
          build_context: ./services/streamlit
          dockerfile_path: ./services/streamlit/Dockerfile
          image_tags: ${{ env.REGISTRY }}/streamlit:${{ env.SHORT_SHA }}

  deploy-dataherald-frontend:
    name: Deploy Dataherald Frontend
    needs: [build-dataherald-frontend, generate-short-sha]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      REGISTRY: 'ghcr.io/kapitolph/dataherald'
      SHORT_SHA: ${{ needs.generate-short-sha.outputs.short_sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Deploy Dataherald Frontend
        uses: ./.github/actions/devtron-container-deploy
        with:
          workflow_ids: '128'
          docker_image: ${{ env.REGISTRY }}/streamlit:${{ env.SHORT_SHA }}
          devtron_cli_token: ${{ secrets.DEVTRON_TOKEN }}